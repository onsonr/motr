// @generated by protoc-gen-@onsonr/es v0.0.1 with parameter "target=ts"
// @generated from file dwn/v1/query.proto (package dwn.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QueryAllocateRequest, QueryAllocateResponse, QueryParamsRequest, QueryParamsResponse, QuerySchemaRequest, QuerySchemaResponse, QuerySyncRequest, QuerySyncResponse } from "./query_pb.js";

const TYPE_NAME = "dwn.v1.Query";

/**
 * Params queries all parameters of the module.
 *
 * @generated from rpc dwn.v1.Query.Params
 */
export const QueryParamsService = {
  typeName: TYPE_NAME,
  method: "Params",
  Request: QueryParamsRequest,
  Response: QueryParamsResponse,
} as const;

/**
 * Schema queries the DID document by its id. And returns the required PKL
 * information
 *
 * @generated from rpc dwn.v1.Query.Schema
 */
export const QuerySchemaService = {
  typeName: TYPE_NAME,
  method: "Schema",
  Request: QuerySchemaRequest,
  Response: QuerySchemaResponse,
} as const;

/**
 * Allocate initializes a Target Vault available for claims with a compatible
 * Authentication mechanism. The default authentication mechanism is WebAuthn.
 *
 * @generated from rpc dwn.v1.Query.Allocate
 */
export const QueryAllocateService = {
  typeName: TYPE_NAME,
  method: "Allocate",
  Request: QueryAllocateRequest,
  Response: QueryAllocateResponse,
} as const;

/**
 * Sync queries the DID document by its id. And returns the required PKL
 * information
 *
 * @generated from rpc dwn.v1.Query.Sync
 */
export const QuerySyncService = {
  typeName: TYPE_NAME,
  method: "Sync",
  Request: QuerySyncRequest,
  Response: QuerySyncResponse,
} as const;

